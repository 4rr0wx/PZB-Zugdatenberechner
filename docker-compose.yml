version: "3.9"

services:
  db:
    image: postgres:15-alpine
    container_name: pzb_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pzb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-pzb}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  backend:
    build:
      context: ./backend
    container_name: pzb_backend
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/${POSTGRES_DB:-pzb}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:8080}
      ENABLE_OTEL: ${ENABLE_OTEL:-false}
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT:-http://signoz-otel-collector:4318}
      OTEL_EXPORTER_OTLP_HEADERS: ${OTEL_EXPORTER_OTLP_HEADERS:-}
      OTEL_EXPORTER_OTLP_INSECURE: ${OTEL_EXPORTER_OTLP_INSECURE:-true}
      OTEL_EXPORTER_OTLP_TIMEOUT: ${OTEL_EXPORTER_OTLP_TIMEOUT:-10}
      OTEL_SERVICE_NAME: ${OTEL_SERVICE_NAME:-pzbbuilder-backend}
      OTEL_RESOURCE_ATTRIBUTES: ${OTEL_RESOURCE_ATTRIBUTES:-}
      OTEL_RESOURCE_ATTRIBUTES_DEPLOYMENT_ENV: ${OTEL_RESOURCE_ATTRIBUTES_DEPLOYMENT_ENV:-development}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8808:8000"
    networks:
      - appnet

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE: /api
    container_name: pzb_frontend
    depends_on:
      - backend
    ports:
      - "8880:80"
    networks:
      - appnet

volumes:
  pgdata:

networks:
  appnet:
    driver: bridge
